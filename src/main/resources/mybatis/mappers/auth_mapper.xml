<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="aia.ers.application.mapper.AuthMapper">

    <!-- 권한코드조회 -->
    <select id="selectAuthCodeList" parameterType="aia.ers.application.pojo.Auth" resultType="aia.ers.application.pojo.Auth">
        SELECT AUTH_ID      AS authId
             , AUTH_NM      AS authNm
             , RMAK         AS rmak
             , AUTH_CLSSFC  AS authClssfc
             , COALESCE(NULLIF(USE_YN,''),'N')       AS useYn
             , CRETR_ID     AS cretrId
             , CRET_DTTM    AS cretDttm
             , MDFR_ID      AS mdfrId
             , MDF_DTTM     AS mdfDttm
          FROM AUTH_GRP
         WHERE AUTH_CLSSFC = #{authClssfc}
           <if test="searchText != null">
           AND ( AUTH_ID LIKE concat('%', #{searchText} , '%')
                 OR AUTH_NM LIKE concat('%', #{searchText}, '%') )
           </if>
         ORDER BY AUTH_ID ASC
    </select>

    <!-- 권한코드체크 -->
    <select id="selectAuthCodeChk" parameterType="aia.ers.application.pojo.Auth" resultType="int">
        SELECT COUNT(AUTH_ID) AS authCnt
          FROM AUTH_GRP
         WHERE AUTH_ID = #{authId}
    </select>

    <!-- 권한코드등록 -->
    <insert id="insertAuthCodeList" parameterType="aia.ers.application.pojo.Auth">
        INSERT INTO AUTH_GRP
             ( AUTH_ID
             , AUTH_NM
             , RMAK
             , AUTH_CLSSFC
             , USE_YN
             , CRETR_ID
             , CRET_DTTM
             , MDFR_ID
             , MDF_DTTM
             )
        VALUES ( #{authId}
               , #{authNm}
               , #{rmak}
               , #{authClssfc}
               , #{useYn}
               , #{cretrId}
               , now()
               , #{mdfrId}
               , now()
             )
    </insert>

    <!-- 권한코드수정 -->
    <update id="updateAuthCodeList" parameterType="aia.ers.application.pojo.Auth">
        UPDATE AUTH_GRP
           SET AUTH_NM = #{authNm}
             , RMAK = #{rmak}
             , USE_YN = #{useYn}
             , MDFR_ID = #{mdfrId}
             , MDF_DTTM = now()
         WHERE AUTH_ID = #{authId}
    </update>

    <!-- 권한코드삭제 -->
    <delete id="deleteAuthCodeList" parameterType="aia.ers.application.pojo.Auth">
        DELETE FROM AUTH_GRP
        WHERE AUTH_ID = #{authId}
    </delete>

    <!-- 권한그룹별메뉴조회 -->
    <select id="selectAuthMenuList" parameterType="aia.ers.application.pojo.Auth" resultType="aia.ers.application.pojo.Auth">
        WITH RECURSIVE MENU_LIST( MNU_ID
                                , MNU_NM
                                , SYS_ID
                                , UP_MNU_ID
                                , MNU_TP_CD
                                , MNU_LVL_SIZE
                                , PRGM_ID
                                , PRGM_PATH_NM
                                , PRGM_TYPE_NM
                                , SMMN_PARMT_NM
                                , SORT_SEQ
                                , RMAK
                                , USE_YN
                                , MNU_PRINT_YN
                                , MNU_PATH
                                , CYCLE
            ) AS ( SELECT T1.MNU_ID
                        , T1.MNU_NM
                        , T1.SYS_ID
                        , T1.UP_MNU_ID
                        , T1.MNU_TP_CD
                        , T1.MNU_LVL_SIZE
                        , T1.PRGM_ID
                        , T1.PRGM_PATH_NM
                        , T1.PRGM_TYPE_NM
                        , T1.SMMN_PARMT_NM
                        , T1.SORT_SEQ
                        , T1.RMAK
                        , T1.USE_YN
                        , T1.MNU_PRINT_YN
                        , ARRAY[ T1.MNU_ID::TEXT ]
                        , FALSE
                     FROM SYS_MNU T1
                    WHERE T1.UP_MNU_ID = '00000000'
                    UNION ALL
                   SELECT T1.MNU_ID
                        , T1.MNU_NM
                        , T1.SYS_ID
                        , T1.UP_MNU_ID
                        , T1.MNU_TP_CD
                        , T1.MNU_LVL_SIZE
                        , T1.PRGM_ID
                        , T1.PRGM_PATH_NM
                        , T1.PRGM_TYPE_NM
                        , T1.SMMN_PARMT_NM
                        , T1.SORT_SEQ
                        , T1.RMAK
                        , T1.USE_YN
                        , T1.MNU_PRINT_YN
                        , MNU_PATH || T1.MNU_ID::TEXT
                        , T1.MNU_ID = ANY(MNU_PATH)
                     FROM SYS_MNU T1
                    INNER JOIN MENU_LIST T2
                       ON T1.UP_MNU_ID = T2.MNU_ID
                    WHERE NOT CYCLE
             )
        SELECT CASE WHEN NULLIF(APM.MNU_ID,'') IS NULL
                    THEN 'N'
                    ELSE 'Y'
                END             AS authUseYn
             , ML.MNU_ID        AS mnuId
             , ML.MNU_NM        AS mnuNm
             , APM.AUTH_ID      AS authId
             , ML.SYS_ID        AS sysId
             , ML.UP_MNU_ID     AS upMnuId
             , ML.MNU_TP_CD     AS mnuTpCd
             , ML.MNU_LVL_SIZE  AS mnuLvlSize
             , ML.PRGM_ID       AS prgmId
             , ML.PRGM_PATH_NM  AS prgmPathNm
             , ML.PRGM_TYPE_NM  AS prgmTypeNm
             , ML.SMMN_PARMT_NM AS smmnParmtNm
             , ML.SORT_SEQ      AS sortSeq
             , ML.RMAK          AS rmak
             , COALESCE(NULLIF(ML.USE_YN,''),'N')        AS useYn
             , COALESCE(NULLIF(ML.MNU_PRINT_YN,''),'N')  AS mnuPrintYn
          FROM MENU_LIST ML
          LEFT OUTER JOIN AUTH_PRGM_MNGM APM
            ON ML.MNU_ID = APM.MNU_ID
           AND APM.AUTH_ID = #{authId}
         ORDER BY ML.MNU_PATH
    </select>

    <!-- 권한별프로그램관리 등록 -->
    <insert id="insertAuthPrgmMngmList" parameterType="aia.ers.application.pojo.Auth">
        INSERT INTO AUTH_PRGM_MNGM
             ( MNU_ID
             , AUTH_ID
             , CRETR_ID
             , CRET_DTTM
             , MDFR_ID
             , MDF_DTTM
             )
        VALUES
             ( #{mnuId}
             , #{authId}
             , #{cretrId}
             , now()
             , #{mdfrId}
             , now()
             )
    </insert>

    <!-- 권한별프로그램관리 삭제 -->
    <delete id="deleteAuthPrgmMngmList" parameterType="aia.ers.application.pojo.Auth">
        DELETE FROM AUTH_PRGM_MNGM
         WHERE MNU_ID = #{mnuId}
           AND AUTH_ID = #{authId}
    </delete>

    <!-- 권한별사용자 등록여부 조회 -->
    <select id="selectAuthUsrMngm" parameterType="aia.ers.application.pojo.Auth" resultType="aia.ers.application.pojo.Auth">
        SELECT EM.DEPT_CD    AS deptCd
             , EM.DEPT_CD    AS deptNm
             , AUM.AUTH_ID   AS authId
             , AUM.AUTH_ID   AS authNm
             , AG.AUTH_CLSSFC AS authClssfc
             , AUM.EMP_NO    AS empNo
             , AUM.EMP_NO    AS empNm
             , AUM.RMAK      AS rmak
          FROM AUTH_USR_MNGM AUM
          LEFT OUTER JOIN EMP_MNGM EM
            ON AUM.EMP_NO = EM.EMP_NO
          LEFT OUTER JOIN AUTH_GRP AG
            ON AUM.AUTH_ID = AG.AUTH_ID
         WHERE AUM.EMP_NO = #{empNo}
           AND AG.AUTH_CLSSFC = #{authClssfc}
    </select>

    <!-- 권한별사용자 권한별 조회 -->
    <select id="selectAuthUsrMngmGrpList" parameterType="aia.ers.application.pojo.Auth" resultType="aia.ers.application.pojo.Auth">
        SELECT EM.DEPT_CD    AS deptCd
             , EM.DEPT_CD    AS deptNm
             , AUM.AUTH_ID   AS authId
             , AUM.AUTH_ID   AS authNm
             , AG.AUTH_CLSSFC AS authClssfc
             , AUM.EMP_NO    AS empNo
             , AUM.EMP_NO    AS empNm
             , AUM.RMAK      AS rmak
             , AUM.USE_YN    AS useYn
          FROM AUTH_USR_MNGM AUM
          LEFT OUTER JOIN EMP_MNGM EM
            ON AUM.EMP_NO = EM.EMP_NO
          LEFT OUTER JOIN AUTH_GRP AG
            ON AUM.AUTH_ID = AG.AUTH_ID
         WHERE AUM.AUTH_ID = #{authId}
           AND AG.AUTH_CLSSFC = #{authClssfc}
    </select>

    <!-- 권한별사용자 부서별 조회 -->
    <select id="selectAuthUsrMngmDeptList" parameterType="aia.ers.application.pojo.Auth" resultType="aia.ers.application.pojo.Auth">
        SELECT EM.DEPT_CD    AS deptCd
             , EM.DEPT_CD    AS deptNm    /* 나중에 함수로 변경 필요 */
             , AUM.AUTH_ID   AS authId
             , AUM.AUTH_ID   AS authNm    /* 나중에 함수로 변경 필요 */
             , AG.AUTH_CLSSFC AS authClssfc
             , EM.EMP_NO     AS empNo
             , EM.EMP_NO     AS empNm    /* 나중에 함수로 변경 필요 */
             , AUM.RMAK      AS rmak
             , CASE WHEN NULLIF(AUM.USE_YN,'') IS NULL
                    THEN 'N'
                    ELSE AUM.USE_YN
                END          AS useYn
          FROM EMP_MNGM EM
          LEFT OUTER JOIN AUTH_USR_MNGM AUM
            ON EM.EMP_NO = AUM.EMP_NO
          LEFT OUTER JOIN AUTH_GRP AG
            ON AUM.AUTH_ID = AG.AUTH_ID
         WHERE EM.DEPT_CD = #{deptCd}
           AND EM.RGNTN_YN = 'N'
           AND AG.AUTH_CLSSFC = #{authClssfc}
    </select>

    <!-- 권한별사용자 등록 -->
    <insert id="insertAuthUsrMngmList" parameterType="aia.ers.application.pojo.Auth">
        INSERT INTO AUTH_USR_MNGM
             ( AUTH_ID
             , EMP_NO
             , RMAK
             , USE_YN
             , CRETR_ID
             , CRET_DTTM
             , MDFR_ID
             , MDF_DTTM
             )
        VALUES
             ( #{authId}
             , #{empNo}
             , #{rmak}
             , #{useYn}
             , #{cretrId}
             , now()
             , #{mdfrId}
             , now()
             )
    </insert>

    <!-- 권한별사용자 수정 -->
    <update id="updateAuthUsrMngmList" parameterType="aia.ers.application.pojo.Auth">
        UPDATE AUTH_USR_MNGM
           SET RMAK = #{rmak}
             , USE_YN = #{useYn}
             , MDFR_ID = #{mdfrId}
             , MDF_DTTM = now()
         WHERE AUTH_ID = #{authId}
           AND EMP_NO = #{empNo}
    </update>

    <!-- 권한별사용자 삭제 -->
    <delete id="deleteAuthUsrMngmList" parameterType="aia.ers.application.pojo.Auth">
        DELETE FROM AUTH_USR_MNGM
        WHERE AUTH_ID = #{authId}
          AND EMP_NO = #{empNo}
    </delete>

    <!-- 사용자별(예외) 추가권한 조회 -->
    <select id="selectUsrExcptAuthList" parameterType="aia.ers.application.pojo.Auth" resultType="aia.ers.application.pojo.Auth">
        WITH RECURSIVE MENU_LIST( MNU_ID
            , MNU_NM
            , SYS_ID
            , UP_MNU_ID
            , MNU_TP_CD
            , MNU_LVL_SIZE
            , PRGM_ID
            , PRGM_PATH_NM
            , PRGM_TYPE_NM
            , SMMN_PARMT_NM
            , SORT_SEQ
            , RMAK
            , USE_YN
            , MNU_PRINT_YN
            , MNU_PATH
            , CYCLE
            ) AS ( SELECT T1.MNU_ID
                        , T1.MNU_NM
                        , T1.SYS_ID
                        , T1.UP_MNU_ID
                        , T1.MNU_TP_CD
                        , T1.MNU_LVL_SIZE
                        , T1.PRGM_ID
                        , T1.PRGM_PATH_NM
                        , T1.PRGM_TYPE_NM
                        , T1.SMMN_PARMT_NM
                        , T1.SORT_SEQ
                        , T1.RMAK
                        , T1.USE_YN
                        , T1.MNU_PRINT_YN
                        , ARRAY[ T1.MNU_ID::TEXT ]
                        , FALSE
                   FROM SYS_MNU T1
                   WHERE T1.UP_MNU_ID = '00000000'
                   UNION ALL
                   SELECT T1.MNU_ID
                        , T1.MNU_NM
                        , T1.SYS_ID
                        , T1.UP_MNU_ID
                        , T1.MNU_TP_CD
                        , T1.MNU_LVL_SIZE
                        , T1.PRGM_ID
                        , T1.PRGM_PATH_NM
                        , T1.PRGM_TYPE_NM
                        , T1.SMMN_PARMT_NM
                        , T1.SORT_SEQ
                        , T1.RMAK
                        , T1.USE_YN
                        , T1.MNU_PRINT_YN
                        , MNU_PATH || T1.MNU_ID::TEXT
                        , T1.MNU_ID = ANY(MNU_PATH)
                   FROM SYS_MNU T1
                            INNER JOIN MENU_LIST T2
                                       ON T1.UP_MNU_ID = T2.MNU_ID
                   WHERE NOT CYCLE
        )
        SELECT CASE WHEN NULLIF(UEA.EMP_NO,'') IS NULL
                    THEN 'N'
                    ELSE 'Y'
            END             AS excptAuthYn
             , ML.MNU_ID        AS mnuId
             , ML.MNU_NM        AS mnuNm
             , UEA.EMP_NO       AS empNo
             , ML.SYS_ID        AS sysId
             , ML.UP_MNU_ID     AS upMnuId
             , ML.MNU_TP_CD     AS mnuTpCd
             , ML.MNU_LVL_SIZE  AS mnuLvlSize
             , ML.PRGM_ID       AS prgmId
             , ML.PRGM_PATH_NM  AS prgmPathNm
             , ML.PRGM_TYPE_NM  AS prgmTypeNm
             , ML.SMMN_PARMT_NM AS smmnParmtNm
             , ML.SORT_SEQ      AS sortSeq
             , ML.RMAK          AS rmak
             , COALESCE(NULLIF(ML.USE_YN,''),'N')        AS useYn
             , COALESCE(NULLIF(ML.MNU_PRINT_YN,''),'N')  AS mnuPrintYn
             , COALESCE(NULLIF(UEA.VIEW_AUTH_YN,''),'N')        AS viewAuthYn
          FROM MENU_LIST ML
          LEFT OUTER JOIN USR_EXCPT_AUTH UEA
            ON ML.MNU_ID = UEA.MNU_ID
           AND UEA.EMP_NO = #{empNo}
         ORDER BY ML.MNU_PATH
    </select>

    <!-- 사용자별(예외) 추가권한 등록 -->
    <insert id="insertUsrExcptAuthList" parameterType="aia.ers.application.pojo.Auth">
        INSERT INTO USR_EXCPT_AUTH
             ( MNU_ID
             , EMP_NO
             , VIEW_AUTH_YN
             , CRETR_ID
             , CRET_DTTM
             , MDFR_ID
             , MDF_DTTM
             )
        VALUES
             ( #{mnuId}
             , #{empNo}
             , 'Y'
             , #{cretrId}
             , now()
             , #{mdfrId}
             , now()
             )
    </insert>

    <!-- 사용자별(예외) 추가권한 삭제 -->
    <delete id="deleteUsrExcptAuthList" parameterType="aia.ers.application.pojo.Auth">
        DELETE FROM USR_EXCPT_AUTH
        WHERE MNU_ID = #{mnuId}
          AND EMP_NO = #{empNo}
    </delete>

</mapper>