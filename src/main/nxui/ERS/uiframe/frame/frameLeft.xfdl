<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="frameLeft" width="363" height="910" titletext="frameLeft" onload="form_onload" cssclass="frm_LF_Bg">
    <Layouts>
      <Layout width="363" height="910" screenid="Desktop_screen">
        <Div id="divFavoratie" taborder="0" text="div00" left="811" top="124" width="200" height="150" visible="false">
          <Layouts>
            <Layout/>
          </Layouts>
        </Div>
        <Div id="divLeftMenu" taborder="1" text="div00" left="0" top="0" bottom="0" width="58">
          <Layouts>
            <Layout>
              <Static id="staMenuBg" taborder="1" left="0" top="0" width="58" bottom="0" cssclass="sta_LF_Bg"/>
              <Button id="bntOrganization" taborder="0" text="편성" left="0" top="84" width="58" height="84" cssclass="btn_LF_Menu02" onclick="divLeftMenu_onclick"/>
              <Button id="btnOperation" taborder="2" text="운영" left="0" top="168" width="58" height="84" cssclass="btn_LF_Menu03" onclick="divLeftMenu_onclick"/>
              <Button id="btnManagment" taborder="3" text="관리" left="0" top="252" width="58" height="84" cssclass="btn_LF_Menu04" onclick="divLeftMenu_onclick"/>
              <Button id="btnFavoratie" taborder="4" text="북마크" left="0" top="336" width="58" height="84" cssclass="btn_LF_Menu05" onclick="divLeftMenu_onclick"/>
              <Button id="btnSetting" taborder="5" left="14" width="28" height="24" cssclass="btn_LF_Set" bottom="71" onclick="divLeftMenu_btnSetting_onclick"/>
              <Button id="btnLogOut" taborder="6" left="14" width="28" height="24" cssclass="btn_LF_Logout" bottom="25" onclick="divLeftMenu_btnLogOut_onclick"/>
              <Button id="btnAllSearch" taborder="7" text="검색" left="0" top="0" width="58" height="84" cssclass="btn_LF_Menu01S" onclick="divLeftMenu_onclick"/>
            </Layout>
          </Layouts>
        </Div>
        <Div id="divList" taborder="2" left="58" top="0" bottom="0" right="0">
          <Layouts>
            <Layout>
              <Edit id="edtSearch" taborder="0" left="25" top="12" width="255" height="28" cssclass="edi_LF_Sch" onkeyup="divList_edtSearch_onkeyup"/>
              <Button id="btnSearch" taborder="1" left="233" top="14" width="30" height="24" cssclass="btn_LF_Sch" onclick="divList_btnSearch_onclick"/>
              <Grid id="grdMenu" taborder="2" left="25" top="50" bottom="2" autofittype="col" treeusecheckbox="false" treeinitstatus="collapse,all" binddataset="dsMenu" oncellclick="grdMenu_oncellclick" cssclass="grd_LF_Menu" treeuseline="false" right="25" formatid="default">
                <Formats>
                  <Format id="default">
                    <Columns>
                      <Column size="250"/>
                    </Columns>
                    <Rows>
                      <Row size="38"/>
                    </Rows>
                    <Band id="body">
                      <Cell text="bind:menuNm" tooltiptext="bind:menuNm" displaytype="treeitemcontrol" edittype="tree" treelevel="bind:menuLvl" cssclass="expr:menuLvl == '0' ? 'cell_LF_Lev1' : 'cell_LF_Lev2'"/>
                    </Band>
                  </Format>
                  <Format id="btnFavoratie">
                    <Columns>
                      <Column size="199"/>
                      <Column size="48"/>
                    </Columns>
                    <Rows>
                      <Row size="38"/>
                    </Rows>
                    <Band id="body">
                      <Cell text="bind:menuNm" tooltiptext="bind:menuNm" displaytype="treeitemcontrol" edittype="tree" treelevel="bind:menuLvl"/>
                      <Cell col="1" cssclass="cell_LF_Delete" displaytype="buttoncontrol" edittype="button"/>
                    </Band>
                  </Format>
                </Formats>
              </Grid>
            </Layout>
          </Layouts>
        </Div>
        <Grid id="grdFavoratie" taborder="3" left="410" top="315" right="-247" bottom="445" autofittype="col" treeusecheckbox="false" treeinitstatus="collapse,all" oncellclick="grdMenu_oncellclick" binddataset="dsMyMenu" visible="false">
          <Formats>
            <Format id="default">
              <Columns>
                <Column size="195"/>
              </Columns>
              <Rows>
                <Row size="30"/>
              </Rows>
              <Band id="body">
                <Cell text="bind:menuNm" treelevel="bind:menuLv" tooltiptext="bind:menuNm"/>
              </Band>
            </Format>
          </Formats>
        </Grid>
        <PopupDiv id="pdivSearchList" text="PopupDiv00" visible="false" left="403" top="43" width="255" height="200" cssclass="pdiv_LF_Sch">
          <Layouts>
            <Layout>
              <Grid id="grdSearchList" taborder="0" left="0" top="0" right="0" bottom="0" autofittype="col" binddataset="dsMenuSearch" cssclass="grd_LF_Sch" oncellclick="pdivSearchList_grdSearchList_oncellclick">
                <Formats>
                  <Format id="default">
                    <Columns>
                      <Column size="235"/>
                    </Columns>
                    <Rows>
                      <Row size="28"/>
                    </Rows>
                    <Band id="body">
                      <Cell text="bind:menuNm" tooltiptext="bind:menuNm" displaytype="decoratetext" textAlign="left"/>
                    </Band>
                  </Format>
                </Formats>
              </Grid>
            </Layout>
          </Layouts>
        </PopupDiv>
      </Layout>
    </Layouts>
    <Objects>
      <Dataset id="dsMenu"/>
      <Dataset id="dsMenuSearch"/>
      <Dataset id="dsMyMenu">
        <ColumnInfo>
          <Column id="PRGM_FULL_PATH" type="STRING" size="32"/>
          <Column id="SORT_ORDR" type="BIGDECIMAL" size="16"/>
          <Column id="MENU_ID" type="STRING" size="32"/>
          <Column id="MENU_NM_EN" type="STRING" size="32"/>
          <Column id="MENU_NM" type="STRING" size="32"/>
          <Column id="PRGM_ID" type="STRING" size="32"/>
          <Column id="PRGM_PATH" type="STRING" size="32"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="dsFavorite"/>
    </Objects>
    <Script type="xscript5.1"><![CDATA[/**
*  AIA 비용관리 시스템
*  @FileName 	frameLeft.xfdl
*  @Creator 	송원창
*  @CreateDate 	2024.10.21
*  @Desction   
************** 소스 수정 이력 ***********************************************
* Date					Modifier					Description
*******************************************************************************
* 2024.10.21			송원창						최초생성
*******************************************************************************
*/

/*******************************************************************************************************************************
 * FORM 변수 선언 영역
*******************************************************************************************************************************/
this.objApp = nexacro.getApplication();

this.fvMenuStatus	= "close";		// Left 메뉴 접기/펼치기 상태값 (open, close)
this.fvIsBackSpace 	= "N";			// 메뉴검색에서 백스페이스 눌렀는 지 여부
this.fvMenuType		= "menu";		// menu, mymenu
this.fvMyMenuEdit	= false; 
/*******************************************************************************************************************************
 * FORM EVENT 영역(onload, onbeforeclose..)
*******************************************************************************************************************************/
/**
 * @description 화면 오픈
 */
this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	//this.gfnFormOnload(obj,e); //필수함수

	// 마이메뉴 gdsMenu 카피
	this.fnCopyMenu();
};

/*******************************************************************************************************************************
 * Transaction 서비스호출 처리 영역
*******************************************************************************************************************************/
/**
 * @description 마이메뉴 조회 트랜잭션
 */
this.fnSearchMyMenu = function()
{
	// 마이메뉴 조회
	let sSvcId 		= "searchMyMenu";
	let sSvcUrl   	= "searchMyMenu.do";
	let sInData     = "";
	let sOutData    = "gdsMyMenu=dsList";
	let sArg      	= "";	
	let sCallBackFnc = "fnCallback";
	
	this.gfnTransaction( sSvcId , 		// transaction을 구분하기 위한 svc id값
						sSvcUrl , 		// trabsaction을 요청할 주소
						sInData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						sOutData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						sArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						sCallBackFnc);  // 통신방법 정의 [생략가능]
};

/**
 * @description 마이메뉴 저장 트랜잭션
 */
this.fnSaveMyMenu = function()
{
	// 마이메뉴 저장
	let sSvcId   	= "saveMyMenu";
	let sSvcUrl   	= "saveMyMenu.do";
	let sInData     = "dsList=dsMyMenu:U";
	let sOutData    = "";
	let sArg      	= "";	
	let sCallBackFnc = "fnCallback";
	
	this.gfnTransaction(sSvcId , 		// transaction을 구분하기 위한 svc id값
						sSvcUrl , 		// trabsaction을 요청할 주소
						sInData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
						sOutData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
						sArg, 			// 입력갑스로 보낼 arguments, strFormData="20120607"
						sCallBackFnc);  // 통신방법 정의 [생략가능]
};
/*******************************************************************************************************************************
 * Callback 영역 (Transaction, popup, message..)
*******************************************************************************************************************************/
this.fnCallback = function (sSvcId, nErrCd, sErrMsg)
{
	switch(sSvcId) 
	{
		case "saveMyMenu":
			// 마이메뉴 재조회
			this.fnSearchMyMenu();
			break;
		case "searchMyMenu":
			// gdsMyMenu -> dsMyMenu 카피
			this.fnCopyMyMenu();
			break;
	} 
};

/*******************************************************************************************************************************
 * 사용자 Function 영역
*******************************************************************************************************************************/
/**
 * @description 마이메뉴 gdsMyMenu 카피
 */
this.fnCopyMenu = function()
{
//	this.dsMenuList.clearData();
//	this.dsMenuList.copyData(this.objApp.gdsMenu);
//	this.dsMenuList.appendData(this.objApp.Dataset0, true);

	//this.objApp.gdsMenu.appendData(this.objApp.Dataset0, true);
	this.dsMenu.copyData(this.objApp.gdsMenu);
	//this.fnSetGridRowSize();
};

/**
 * @description 그리드 RowSize 셋팅
*/
this.fnSetGridRowSize = function()
{
	let objGrid = this.divList.form.grdMenu;
	objGrid.set_enableredraw(false);

	for(let i=0; i < this.dsMenu.rowcount; i++)
	{
		let grdRow = objGrid.getTreeRow(i);
		let css = objGrid.getCellPropertyValue(grdRow, 0, "cssclass");
trace(css);
		if(css == "cell_LF_Lev1") {
			objGrid.setRealRowSize(grdRow,"50");
		} else {
			objGrid.setRealRowSize(grdRow,"38");
		}
	}
	objGrid.set_enableredraw(true);
};

/**
 * @description 메뉴 찾기 셋팅(Menu List Box 생성)
*/
this.fnSetMenuSearch = function()
{
	// 메뉴 검색 팝업DIV 위치 에디트 하단으로 이동
	this.pdivSearchMenu.move(0, 42);
	
	// 메뉴 Datset 복사
	this.fnSetMenuSearchDataset();
};

/**
 * @description FORM오픈 [공통함수호출]
*/
this.fnFormOpen = function (sMenuId, objParam)
{
	if(this.gfnIsNull(sMenuId)) return;

	//this.fnSetRecentMenuDs(sMenuId);
	this.gfnOpenMenu(sMenuId, objParam, false);
};

/**
 * @description 최근연린 메뉴 저장
*/
this.fnSetRecentMenuDs = function(sMenuId)
{
	let nRow = this.dsRecentMenu.findRow(this.FRAME_MENUCOLUMNS.menuId, sMenuId);
	if(nRow < 0)
	{
		nRow		= this.dsMenuList.findRow(this.FRAME_MENUCOLUMNS.menuId, sMenuId);
		let sMenuNm = this.dsMenuList.getColumn(nRow, this.FRAME_MENUCOLUMNS.menuNm);
		
		nRow = this.dsRecentMenu.addRow();
		this.dsRecentMenu.setColumn(nRow, this.FRAME_MENUCOLUMNS.menuId, sMenuId);
		this.dsRecentMenu.setColumn(nRow, this.FRAME_MENUCOLUMNS.menuNm, sMenuNm);
	}
};

/**
 * @description 메뉴 visible
*/
this.fnMenuVisible = function()
{
	let visibleFlag = this.fvMenuStatus == "close" ? false : true;
	this.divList.visible = visibleFlag;
	this.resetScroll();
};

/**
 * @description 메뉴 visible2
*/
this.fnMenuVisible2 = function(v)
{
	let format;
	if(v.id != "btnFavoratie")
	{
		bindDs = "dsMenu"
		format = "default";
	}
	else
	{
		this.dsFavorite.copyData(this.dsMenu);
		bindDs = "dsFavorite"
		format = "btnFavoratie";
	}
	
	this.divList.form.grdMenu.binddataset = bindDs;
	this.divList.form.grdMenu.formatid = format;
	this.fvMenuStatus = "open"
	this.objApp.gvHFS.set_separatesize("363,*");
	this.objApp.gvFrmMdi.form.btnLeftMenuShowHide.cssclass = "btn_LF_Close";
	this.divList.visible = true;
	this.resetScroll();
};

/**
 * @description 대메뉴 css 변경
*/
this.fnCssclassChange = function(v)
{
	let bntList = {
					"btnAllSearch":		"btn_LF_Menu01",
					"bntOrganization":	"btn_LF_Menu02",
					"btnOperation":		"btn_LF_Menu03",
					"btnManagment":		"btn_LF_Menu04",
					"btnFavoratie":		"btn_LF_Menu05"
					};
	let comp = this.divLeftMenu.form.components;
	
	for(list in bntList)
	{
		list != v.id ? comp[list].cssclass = bntList[list] : comp[list].cssclass = bntList[list]+"S";
    }
};
/*******************************************************************************************************************************
 * 각 COMPONENT 별 EVENT 영역
*******************************************************************************************************************************/
/**
 * @description 메뉴 전체 열기
*/
this.divLeftMenu_btnClose_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	this.divLeftMenu.form.grdLeftMenu.treeinitstatus = "expand,all";
};

/**
 * @description 메뉴 전체 닫기
*/
this.divLeftMenu_btnOpen_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	this.divLeftMenu.form.grdLeftMenu.treeinitstatus = "collapse,all";
};

/**
 * @description 메뉴 클릭
*/
this.grdMenu_oncellclick = function(obj:nexacro.Grid,e:nexacro.GridClickEventInfo)
{
	// Tree 이미지 클릭시 리턴
	if(e.clickitem == "treeitembutton") return;
	
	let nRow = obj.getTreeRow(e.row);
	
	let nStat = obj.getTreeStatus(nRow);

	// 자식이 없으면
	if((nStat^1) != 2) obj.setTreeStatus(nRow ,nStat^1);
	
	if(nStat == 3)
	{
		let objDs = obj.getBindDataset();
		// Click시 해당 메뉴 호출
		let sMenuId  = objDs.getColumn(objDs.rowposition, this.FRAME_MENUCOLUMNS.menuId);
		let sPageUrl = objDs.getColumn(objDs.rowposition, this.FRAME_MENUCOLUMNS.menuUrl);
		
		if(!(this.gfnIsNull(sMenuId) || this.gfnIsNull(sPageUrl))) {
			// 메뉴 화면 호출
			this.fnFormOpen(sMenuId);
		}
	}
};

/**
 * @description 즐겨찾기 최근메뉴클릭
*/
this.divFavoratie_grdFavoratie_divRecent_grdRecent_oncellclick = function(obj:nexacro.Grid,e:nexacro.GridClickEventInfo)
{
	let nCellIdx = e.cell;
	
	let objDs = obj.getBindDataset();
	
	// 선택한 메뉴 아이디
	let sMenuId = objDs.getColumn(objDs.rowposition, this.FRAME_MENUCOLUMNS.menuId);
	
	if (nCellIdx == 0) {
		if(this.fvMyMenuEdit) return;
		// 메뉴 클릭일 경우
		this.fnFormOpen(sMenuId);
	} else if (nCellIdx == 1) {
		if(!this.fvMyMenuEdit) return;
		// X 버튼일 경우
		this.dsMyMenu.deleteRow(objDs.getDatasetRow(e.row));
	}
};

/**
 * @description 홈 화면 바로가기
*/
this.btnHome_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	// 메인으로 이동
	this.gfnSetMain();
};


/**
 * @description 대메뉴 클릭
*/
this.divLeftMenu_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	this.fnCssclassChange(obj);
	this.fnMenuVisible2(obj);
};

/**
 * @description 세팅
*/
this.divLeftMenu_btnSetting_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	
};

/**
 * @description 로그아웃
*/
this.divLeftMenu_btnLogOut_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	
};

this.pdivSearchList_grdSearchList_oncellclick = function(obj:nexacro.Grid,e:nexacro.GridClickEventInfo)
{
	let objDs = obj.getBindDataset();
	
	// 선택한 메뉴 아이디
	let sMenuId = objDs.getColumn(objDs.rowposition, this.FRAME_MENUCOLUMNS.menuId);
	this.fnFormOpen(sMenuId);
	this.pdivSearchList.closePopup();
};

this.divList_edtSearch_onkeyup = function(obj:nexacro.Edit,e:nexacro.KeyEventInfo)
{
	if(e.keycode == 13)
	{
		this.divList.form.btnSearch.click();
	}
};

this.divList_btnSearch_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	this.dsMenuSearch.clearData();
	this.dsMenuSearch.copyData(this.dsMenu);
	this.dsMenuSearch.rowposition = -1;
	let oEdit = this.divList.form.edtSearch;
	let filterstr;

	this.dsMenuSearch.set_enableevent(false);
	if(!this.gfnIsNull(oEdit.value))
	{
		filterstr = this.FRAME_MENUCOLUMNS.menuNm + ".indexOf('" + oEdit.value + "') > -1";
	}
	else
	{
		filterstr = "";
	}
	
	this.dsMenuSearch.filterstr = filterstr;
	let nm;
	for(let i = 0; i < this.dsMenuSearch.rowcount; i++)
	{
		nm = this.gfnReplaceAll(this.dsMenuSearch.getColumn(i, this.FRAME_MENUCOLUMNS.menuNm), oEdit.value, "<fc v='red'>"+oEdit.value+"</fc>");
		this.dsMenuSearch.setColumn(i, this.FRAME_MENUCOLUMNS.menuNm, nm);
	}
	this.dsMenuSearch.set_enableevent(true);
	this.pdivSearchList.trackPopupByComponent(oEdit, 0, oEdit.getOffsetHeight()+5)
};]]></Script>
  </Form>
</FDL>
